#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —Å–µ—Ä–≤–µ—Ä–∞ —Å PostgreSQL + Apache AGE

–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –≥—Ä–∞—Ñ–æ–º
"""

import requests
import json
import time
import sys

API_URL = "http://localhost:8899"


def test_api():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    
    print("=" * 60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –° POSTGRESQL + AGE")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —É–∑–ª–æ–≤
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç GET /api/nodes")
    response = requests.get(f"{API_URL}/api/nodes")
    if response.status_code == 200:
        nodes = response.json()
        print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —É–∑–ª–æ–≤: {len(nodes)}")
        if nodes:
            print(f"   –ü—Ä–∏–º–µ—Ä: {nodes[0]}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(f"   {response.text}")
    
    # –¢–µ—Å—Ç 2: –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∞
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç GET /api/graph")
    response = requests.get(
        f"{API_URL}/api/graph",
        params={
            'start': 'canonical_nodes/c:backend',
            'depth': 3,
            'theme': 'dark'
        }
    )
    if response.status_code == 200:
        graph = response.json()
        print(f"   ‚úÖ –ì—Ä–∞—Ñ –ø–æ—Å—Ç—Ä–æ–µ–Ω")
        print(f"   –£–∑–ª–æ–≤: {len(graph.get('nodes', []))}")
        print(f"   –†—ë–±–µ—Ä: {len(graph.get('edges', []))}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(f"   {response.text}")
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–±—Ä–∞
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç POST /api/edges (—Å–æ–∑–¥–∞–Ω–∏–µ)")
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º –¥–≤–∞ —É–∑–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–≤—è–∑–∏
    response = requests.get(f"{API_URL}/api/nodes", params={'limit': 2})
    if response.status_code == 200 and len(response.json()) >= 2:
        nodes = response.json()
        from_node = nodes[0]['_id']
        to_node = nodes[1]['_id']
        
        edge_data = {
            '_from': from_node,
            '_to': to_node,
            'relationType': 'test',
            'projects': ['test']
        }
        
        response = requests.post(
            f"{API_URL}/api/edges",
            json=edge_data
        )
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print(f"   ‚úÖ –†–µ–±—Ä–æ —Å–æ–∑–¥–∞–Ω–æ: {result.get('edge')}")
            else:
                print(f"   ‚ö†Ô∏è  –í–∞–ª–∏–¥–∞—Ü–∏—è: {result.get('error')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   {response.text}")
    else:
        print("   ‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–∑–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç POST /api/edges/check (—É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å)")
    response = requests.post(
        f"{API_URL}/api/edges/check",
        json={
            '_from': '844424930131969',
            '_to': '844424930131970',
        }
    )
    if response.status_code == 200:
        result = response.json()
        is_unique = result.get('is_unique')
        print(f"   {'‚úÖ' if is_unique else '‚ö†Ô∏è '} –£–Ω–∏–∫–∞–ª—å–Ω–∞: {is_unique}")
        if not is_unique:
            print(f"   –û—à–∏–±–∫–∞: {result.get('error')}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    
    # –¢–µ—Å—Ç 5: –î–µ—Ç–∞–ª–∏ –æ–±—ä–µ–∫—Ç–∞
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç GET /api/object_details")
    response = requests.get(
        f"{API_URL}/api/object_details",
        params={'id': '844424930131969'}
    )
    if response.status_code == 200:
        obj = response.json()
        print(f"   ‚úÖ –û–±—ä–µ–∫—Ç –ø–æ–ª—É—á–µ–Ω: {obj}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("=" * 60)


if __name__ == '__main__':
    try:
        test_api()
    except requests.ConnectionError:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API —Å–µ—Ä–≤–µ—Ä—É")
        print(f"   URL: {API_URL}")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω:")
        print("   python3 api_server_age.py --db-password <password>")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

