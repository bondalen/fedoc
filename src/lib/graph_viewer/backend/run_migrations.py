#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–æ–≤
"""

import sys
import psycopg2
from pathlib import Path

def run_migration(db_conn, migration_file):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞"""
    print(f"–í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é: {migration_file}")
    
    try:
        with open(migration_file, 'r', encoding='utf-8') as f:
            migration_sql = f.read()
        
        with db_conn.cursor() as cur:
            cur.execute(migration_sql)
            db_conn.commit()
        
        print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è {migration_file} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –º–∏–≥—Ä–∞—Ü–∏–∏ {migration_file}: {e}")
        db_conn.rollback()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"""
    if len(sys.argv) != 6:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python run_migrations.py <host> <port> <database> <user> <password>")
        sys.exit(1)
    
    host, port, database, user, password = sys.argv[1:6]
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        db_conn = psycopg2.connect(
            host=host,
            port=port,
            database=database,
            user=user,
            password=password
        )
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {database} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)
    
    # –°–ø–∏—Å–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ –ø–æ—Ä—è–¥–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    migrations_dir = Path(__file__).parent / "migrations"
    migrations = [
        "001_create_normalized_projects.sql",
        "002_create_project_functions.sql", 
        "003_migrate_existing_data.sql"
    ]
    
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    
    success_count = 0
    for migration in migrations:
        migration_file = migrations_dir / migration
        if migration_file.exists():
            if run_migration(db_conn, migration_file):
                success_count += 1
            else:
                print(f"‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è {migration} –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å.")
                break
        else:
            print(f"‚ö†Ô∏è –§–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ {migration} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{len(migrations)} –º–∏–≥—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    
    if success_count == len(migrations):
        print("üéâ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
    
    db_conn.close()

if __name__ == "__main__":
    main()
